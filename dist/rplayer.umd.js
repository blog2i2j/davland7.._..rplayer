(function(t,s){typeof exports=="object"&&typeof module<"u"?module.exports=s(require("hls.js")):typeof define=="function"&&define.amd?define(["hls.js"],s):(t=typeof globalThis<"u"?globalThis:t||self,t.rPlayer=s(t.Hls))})(this,function(t){"use strict";class s extends Audio{constructor(){super(),this.volume=.2}async playSrc(e){const n=e.indexOf(".m3u8")>0;if(this.isPaused(e))this.play();else{this.stop(),n?t.isSupported()&&(this.hls=new t,this instanceof HTMLAudioElement&&this.hls.attachMedia(this),this.hls.loadSource(e),await new Promise(i=>{var h;(h=this.hls)==null||h.on(t.Events.MANIFEST_PARSED,()=>{i()})})):(this.src=e,await new Promise(i=>{this.addEventListener("loadedmetadata",()=>{i()})}));try{await this.play()}catch(i){console.error("Error on play",i)}}}mute(){this.muted=!this.muted}stop(){this.pause(),this.currentTime=0,this.hls&&(this.hls.destroy(),this.hls=null)}upVolume(){const e=this.volume;this.setVolume(e+.1)}downVolume(){const e=this.volume;this.setVolume(e-.1)}rewind(e){this.currentTime=this.currentTime-e}setVolume(e){e>=0&&e<=1&&(this.volume=e,this.dispatchEvent(new Event("volumechange")))}isPaused(e){return this.currentTime>0&&!this.playing&&this.url===e}get isHls(){return this.hls!==null&&this.hls instanceof t}get url(){var e;return this.isHls?(e=this.hls)==null?void 0:e.url:this.src}get playing(){return this.currentTime>0&&!this.paused&&!this.ended&&this.readyState>2}}return s});
